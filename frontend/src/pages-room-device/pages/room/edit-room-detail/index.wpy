<template>
  <view class="edit-room-detail-container">
    <view class="form-container-room-base-info">
      <i-cell-group>
        <i-cell title="房间名称">
          <input
            slot="footer"
            value="{{form.name}}"
            type="text"
            placeholder="请输入房间名称"
            @input="changeName"
          />
        </i-cell>
        <i-cell title="房间图标" @tap="toggleModal({{true}})">
          <image
            slot="footer"
            src="{{form.icon}}"
            alt="房间图标"
            class="room-icon"
            @tap="toggleModal({{true}})"
            wx:if="{{form.icon}}"
          />
        </i-cell>
      </i-cell-group>
    </view>

    <view class="form-container-room-device-list">
      <view class="room-device-list-container">
        <view wx:if="{{newRoomDeviceInfoList.length > 0}}">
          <i-cell-group>
            <repeat for="{{newRoomDeviceInfoList}}" key="index" index="index" item="item">
              <label class="device-list-item" @tap="toggleDevice({{item}})">
                <i-cell i-class="i-cell-device-list-item">
                  <view class="device-base-info-container" slot="icon">
                    <image src="{{item.icon}}"/>
                    <view class="name">
                      <text>{{item.name}}</text>
                    </view>
                  </view>
                  <view slot="footer">
                    <radio
                      color="#40a9ff"
                      value="{{item.id}}"
                      checked="{{item.checked}}"
                      @tap="toggleDevice({{item}})"
                    />
                  </view>
                </i-cell>
              </label>
            </repeat>
          </i-cell-group>
        </view>
        <view class="not-device-info-list" wx:else>
          <text>当前房间暂无设备!</text>
        </view>
      </view>
    </view>

    <view class="action-container">
      <i-button
        i-class="i-button-edit-room"
        type="primary"
        loading="{{loading}}"
        @tap="editRoom"
      >保存并修改
      </i-button>
      <i-button
        i-class="i-button-delete-room"
        type="error"
        loading="{{loading2}}"
        @tap="toDeleteRoom"
      >删除此房间
      </i-button>
    </view>

    <i-modal
      i-class="i-modal-room-icon"
      action-mode="vertical"
      visible="{{visible}}"
      actions="{{actions}}"
      @click="handlerAction"
      @close="toggleModal({{false}})"
    >
      <view class="select-icon-container">
        <view class="room-icon-list-item">
          <view class="image-container">
            <image src="{{form.iconBuf}}" alt="房间图标"/>
          </view>
        </view>
      </view>
      <view class="room-icon-list-container">
        <repeat for="{{roomIconList}}" key="index" index="index" item="item">
          <view class="room-icon-list-item" @tap="changeRoomIcon({{item.icon}})">
            <view class="image-container">
              <image src="{{item.icon}}" alt="房间图标"/>
            </view>
          </view>
        </repeat>
      </view>
    </i-modal>

    <i-modal
      i-class="i-modal-delete-room"
      title="删除房间确认"
      visible="{{ visible2 }}"
      @click="handlerAction2"
      actions="{{actions2}}"
      @close="toggleModal2({{false}})"
    >
      <view>房间对应的设备也会将被删除</view>
    </i-modal>
  </view>
  <i-message id="message"/>
</template>

<script>
import wepy from 'wepy';
import { connect } from 'wepy-redux';
import Base from '../../../../components/iview/base/index';
import { updateRoomInfoList, updateDeviceInfoList } from '../../../../store/feature/index';
import api from '../../../../api/index';

@connect({
  userInfo: (state) => state.account.userInfo,
  deviceInfoList: (state) => state.feature.deviceInfoList
}, {
  updateRoomInfoList,
  updateDeviceInfoList
})
export default class Home extends wepy.page {
  config = {
    navigationBarTitleText: ''
  };

  data = {
    form: {
      // id
      id: '',
      // 房间名称
      name: '',
      // 房间图标
      icon: '',
      // 选择的房间图标
      iconBuf: ''
    },
    // 控制 显示/隐藏 房间图标选择容器
    visible: false,
    // 控制 显示/隐藏 删除房间确认容器
    visible2: false,
    // 模态框按钮
    actions: [
      {
        name: '确定',
        color: '#2d8cf0'
      },
      {
        name: '取消'
      }
    ],
    // 模态框按钮
    actions2: [
      {
        name: '取消'
      },
      {
        name: '确定',
        color: '#f02517'
      }
    ],
    // 房间的可用图标
    roomIconList: [
      {
        icon: '/assets/images/home.png'
      },
      {
        icon: '/assets/images/kitchen.png'
      },
      {
        icon: '/assets/images/living.png'
      },
      {
        icon: '/assets/images/restaurant.png'
      },
      {
        icon: '/assets/images/master-bedroom.png'
      },
      {
        icon: '/assets/images/second-bedroom.png'
      },
      {
        icon: '/assets/images/bathroom.png'
      }
    ],
    // 修改房间信息加载状态
    loading: false,
    // 删除房间信息加载状态
    loading2: false,
    // 当前房间的设备列表
    newRoomDeviceInfoList: []
  };

  methods = {
    // 改变房间名称
    changeName: (e) => {
      this.form.name = e.detail.value;
    },
    // 显示/隐藏 房间图标选中容器
    toggleModal: (flag) => {
      this.visible = flag;
      this.$apply();
    },
    // 改变房间图标
    changeRoomIcon: (icon) => {
      this.form.iconBuf = icon;
      this.$apply();
    },
    // 模态框按钮点击事件
    handlerAction: (e) => {
      if (e.detail.index === 0) {
        // 保存当前选择的图片
        this.form.icon = this.form.iconBuf;
        this.$apply();
      } else {
        // 还原已选择的图片
        this.form.iconBuf = this.form.icon;
        this.$apply();
      }
      this.methods.toggleModal(false);
    },
    // 删除/添加设备
    toggleDevice: (e) => {
      this.newRoomDeviceInfoList = this.newRoomDeviceInfoList.map(deviceInfoItem => {
        if (deviceInfoItem.id === e.id) {
          const newDeviceInfoItem = {
            ...deviceInfoItem
          };
          newDeviceInfoItem.checked = !newDeviceInfoItem.checked;
          return newDeviceInfoItem;
        }
        return deviceInfoItem;
      });
      this.$apply();
    },
    refreshNewRoomDeviceInfoList: () => {
      this.newRoomDeviceInfoList = this.deviceInfoList
        .filter(deviceInfoItem => deviceInfoItem.roomId === this.form.id)
        .map(deviceInfoItem => {
          deviceInfoItem.checked = true;
          return deviceInfoItem;
        });
      this.$apply();
    },
    // 修改房间
    editRoom: async () => {
      if (this.loading) return;
      this.loading = true;
      this.$apply();

      const roomInfo = {
        openid: this.userInfo.openid,
        id: this.form.id,
        name: this.form.name,
        icon: this.form.icon
      };

      if (!roomInfo.name) {
        Base.$Message({
          content: '请输入房间名称',
          type: 'error'
        });

        this.loading = false;
        this.$apply();

        return;
      }

      // 更新房间数据
      await api.room.updateRoom(roomInfo.id, roomInfo);

      // 是否需要更新设备列表数据, 改动了才更新
      let updateDeviceFlag = false;
      // 更新设备列表数据
      await Promise.all(this.newRoomDeviceInfoList.map(async (roomDeviceInfoItem) => {
        if (!roomDeviceInfoItem.checked) {
          updateDeviceFlag = true;
          await api.device.deleteDevice(roomDeviceInfoItem.id, {
            openid: this.userInfo.openid
          });
        }
      }));

      let result1 = api.room.selectRoomList({
        openid: this.userInfo.openid
      });
      let result2 = null;
      if (updateDeviceFlag) {
        result2 = api.device.selectDeviceList({
          openid: this.userInfo.openid
        });
      }
      result1 = await result1;
      if (updateDeviceFlag) {
        result2 = await result2;
      }
      // 更新房间数据
      this.methods.updateRoomInfoList(result1.data);
      if (updateDeviceFlag) {
        // 更新设备数据
        this.methods.updateDeviceInfoList(result2.data);
      }

      setTimeout(() => {
        this.loading = false;
        this.$apply();

        // 返回上一页
        wx.navigateBack({
          delta: 1
        });
      }, 500);
    },
    // 显示/隐藏 删除房间确认容器
    toggleModal2: (flag) => {
      this.visible2 = flag;
      this.$apply();
    },
    // 删除房间
    toDeleteRoom: () => {
      // 是否为默认房间
      if (this.form.id === '1') {
        Base.$Message({
          content: '默认房间不可删除哦, 如果需要您可以修改房间信息',
          type: 'warning',
          duration: 5
        });
      } else {
        this.visible2 = true;
        this.$apply();
      }
    },
    // 模态框按钮点击事件
    handlerAction2: async (e) => {
      this.methods.toggleModal2(false);
      if (this.loading2) return;
      if (e.detail.index === 1) {
        this.loading2 = true;
        this.$apply();

        // 删除房间数据(会删除对应房间设备数据)
        await api.room.deleteRoom(this.form.id, {
          openid: this.userInfo.openid
        });

        let result1 = api.room.selectRoomList({
          openid: this.userInfo.openid
        });
        let result2 = api.device.selectDeviceList({
          openid: this.userInfo.openid
        });
        result1 = await result1;
        result2 = await result2;
        // 更新设备数据
        this.methods.updateDeviceInfoList(result2.data);
        // 更新房间数据
        this.methods.updateRoomInfoList(result1.data);

        setTimeout(() => {
          this.loading2 = false;
          this.$apply();

          // 返回上一页
          wx.navigateBack({
            delta: 1
          });
        }, 500);
      }
    }
  };

  watch = {
    // 监听设备数据, 更新房间数据
    deviceInfoList: () => {
      this.methods.refreshNewRoomDeviceInfoList();
    }
  };

  onLoad(options) {
    // 调试
    let roomInfo = {};
    if (!options.name) {
      // 开发调试数据
      roomInfo = {
        id: 1,
        name: '客厅',
        icon: '/assets/images/living.png',
        iconBuf: '/assets/images/living.png'
      };
    } else {
      roomInfo = {
        id: parseInt(options.id),
        name: options.name,
        icon: options.icon,
        iconBuf: options.icon
      };
    }
    // 动态设置标题
    wx.setNavigationBarTitle({
      title: roomInfo.name
    });
    // 初始化页面所需数据
    this.form = roomInfo;
    this.methods.refreshNewRoomDeviceInfoList();
    this.$apply();
  }
}
</script>

<style lang="less">
  .edit-room-detail-container {
    .form-container-room-base-info {
      background-color: #fff;
      .room-icon {
        width: 25px;
        height: 25px;
        margin-right: 5px;
      }
    }
    .form-container-room-device-list {
      margin-top: 10px;
      background-color: #fff;
      .not-device-info-list {
        padding-top: 10px;
        padding-bottom: 10px;
        font-size: 14px;
        text-align: center;
      }
      .i-cell-device-list-item {
        &:active {
          background-color: rgba(0, 0, 0, .05);
        }
        .device-base-info-container {
          display: flex;
          align-items: center;
          image {
            width: 25px;
            height: 25px;
            margin-right: 10px;
            padding: 5px;
          }
          .nam {
            display: flex;
            flex-direction: column;
          }
        }
      }
    }
    .action-container {
      padding-bottom: 10px;
      .i-button-edit-room,
      .i-button-delete-room {
        margin-left: 15px;
        margin-right: 15px;
        margin-bottom: 0;
      }
    }

    .i-modal-room-icon {
      & > view:first-child {
        width: 100%;
        & > view:first-child {
          & > view:first-child {
            max-height: 90%;
            margin-bottom: 0;
            padding-left: 10px;
            padding-right: 10px;
            .select-icon-container,
            .room-icon-list-container {
              display: flex;
              flex-wrap: wrap;
              .room-icon-list-item {
                display: flex;
                flex-direction: column;
                align-items: center;
                justify-content: center;
                width: 25%;
                margin-bottom: 15px;
                box-sizing: border-box;
                .image-container {
                  padding: ~"35rpx";
                  border: ~"1rpx" solid #e9eaec;
                  &:active {
                    background: rgba(0, 0, 0, .05);
                  }
                  image {
                    width: 35px;
                    height: 35px;
                  }
                }
              }
            }
            .select-icon-container {
              justify-content: center;
              border-bottom: 1px solid #e1e1e1;
              margin-bottom: 15px;
              .room-icon-list-item {
                width: 100%;
              }
            }
            .room-icon-list-container {
              overflow-y: auto;
              max-height: 300px;
            }
          }
        }
      }
    }

    .i-modal-delete-room {
      & > view:first-child {
        width: 100%;
        & > view:first-child {
          & > view:first-child {
            max-height: 90%;
            margin-bottom: 0;
            padding-left: 10px;
            padding-right: 10px;
          }
          & > view:nth-child(2) {
            padding-left: 10px;
            padding-right: 10px;
          }
        }
      }
    }
  }
</style>
