<template>
  <view class="home-container">
    <view class="home-info-container">
      <view class="top">
        <view class="home-name">
          <text wx:if="{{userInfo.userInfo !== undefined}}">{{userInfo.userInfo.nickName}}的家</text>
        </view>
        <!-- 添加设备按钮 -->
        <view
          class="to-add-deice"
          @tap="addFeature"
        >+
        </view>
      </view>
      <view class="bottom" wx:if="{{!loading && userInfo.userInfo !== undefined}}">
        <view class="tem" wx:if="{{temHum1.tem}}">室内温度
          <view class="number">{{temHum1.tem}}°</view>
        </view>
        <view class="tem" wx:if="{{temHum1.hum}}">室内湿度
          <view class="number">{{temHum1.hum}}°</view>
        </view>
      </view>
    </view>
    <view class="room-device-container" wx:if="{{!loading}}">
      <!-- 房间信息 -->
      <view class="room-info-list-container">
        <scroll-view class="scroll-view" scroll-x wx:if="{{userInfo.userInfo !== undefined}}">
          <repeat for="{{newRoomDeviceInfoList}}" key="index" index="index" item="item">
            <view class="room-name {{index === current ? 'active' : ''}}" @tap="changeCurrent({{index}})">
              {{item.name}}
            </view>
          </repeat>
        </scroll-view>
        <scroll-view class="scroll-view" scroll-x wx:else>
          <view class="room-name active">我的设备</view>
        </scroll-view>
      </view>
      <!-- 房间对应的设备信息 -->
      <view class="device-info-list" wx:if="{{userInfo.userInfo !== undefined}}">
        <swiper style="height: {{swiperHeight}}" current="{{current}}" bindchange="chaneScroll">
          <repeat for="{{newRoomDeviceInfoList}}" key="index" index="index" item="item">
            <swiper-item>
              <view class="device-info-list-container" wx:if="{{item.deviceInfoList.length > 0}}">
                <repeat for="{{item.deviceInfoList}}" key="index2" index="index2" item="item2">
                  <view class="device-info-list-item" @tap="toActionDevice({{item2}})">
                    <view class="device-info {{featureInfo[item2.controlName] == undefined ? 'offline' : ''}}">
                      <view class="name-room-name">
                        <view class="name">{{item2.name}}</view>
                        <view class="room-name">{{item2.roomName}}</view>
                      </view>
                      <view class="image-action-list">
                        <view class="image">
                          <image src="{{item2.icon}}"></image>
                        </view>
                        <!-- 只有swiper的设备 -->
                        <view
                          class="action-power {{featureInfo[item2.controlName] ? 'active' : ''}} {{featureInfo[item2.controlName] == undefined ? 'offline' : ''}}"
                          wx:if="{{item2.originControlName === 'LED' || item2.originControlName === 'door' || item2.originControlName === 'hood' || item2.originControlName === 'cur'}}"
                        >
                          <view class="offline" wx:if="{{featureInfo[item2.controlName] == undefined}}">离线</view>
                          <view class="online" wx:else>
                            <image src="/assets/images/power-on.png" wx:if="{{featureInfo[item2.controlName]}}"/>
                            <image src="/assets/images/power-off.png" wx:else/>
                          </view>
                        </view>
                        <!-- 风扇 -->
                        <view
                          class="action-fan {{featureInfo[item2.controlName] !== '0' ? 'active' : ''}} {{featureInfo[item2.controlName] == undefined ? 'offline' : ''}}"
                          wx:if="{{item2.originControlName === 'fan'}}"
                        >
                          <view class="offline" wx:if="{{featureInfo[item2.controlName] == undefined}}">离线</view>
                          <view class="online" wx:else>
                            <view class="fan-number" wx:if="{{featureInfo[item2.controlName] !== '0'}}">
                              {{featureInfo[item2.controlName]}}档
                            </view>
                            <image src="/assets/images/power-off.png" wx:else/>
                          </view>
                        </view>
                        <!-- 空调 -->
                        <view
                          class="action-tem {{featureInfo[item2.controlName] !== '0' ? 'active' : ''}} {{featureInfo[item2.controlName] == undefined ? 'offline' : ''}}"
                          wx:if="{{item2.originControlName === 'tem'}}"
                        >
                          <view class="offline" wx:if="{{featureInfo[item2.controlName] == undefined}}">离线</view>
                          <view class="online" wx:else>
                            <view class="fan-number" wx:if="{{featureInfo[item2.controlName] !== '0'}}">
                              {{featureInfo[item2.controlName]}}°
                            </view>
                            <image src="/assets/images/power-off.png" wx:else/>
                          </view>
                        </view>
                      </view>
                    </view>
                  </view>
                </repeat>
              </view>
              <view class="not-device-container" wx:else>
                <view class="not-device">尚未添加设备!</view>
              </view>
            </swiper-item>
          </repeat>
        </swiper>
      </view>
      <view class="to-sign-in-tooltip" @tap="toSignIn" wx:else>
        <view class="bold">立即登陆</view>
        <view>开启您的智能生活</view>
      </view>
    </view>
    <view class="loading-container" wx:else>
      <i-spin size="large" fix></i-spin>
    </view>

    <!-- 弹出的模态框 -->
    <i-modal
      i-class="i-modal-device-control"
      visible="{{visible}}"
      show-ok="{{false}}"
      show-cancel="{{false}}"
      @close="toggleModal({{false}})"
    >
      <view class="device-name">{{actionDeviceInfo.name}}</view>
      <view class="device-action-form">
        <!-- 只有swiper的设备 -->
        <i-cell-group
          wx:if="{{actionDeviceInfo.originControlName === 'LED' || actionDeviceInfo.originControlName === 'door' || actionDeviceInfo.originControlName === 'cur' || actionDeviceInfo.originControlName === 'hood'}}"
        >
          <i-cell title="开关">
            <i-switch
              i-class="{{openLoading ? 'open-loading' : ''}}"
              value="{{featureInfo[actionDeviceInfo.controlName]}}"
              @change="changeFeatureInfo"
              slot="footer"
            />
          </i-cell>
        </i-cell-group>
        <!-- 风扇 -->
        <i-cell-group
          wx:if="{{actionDeviceInfo.originControlName === 'fan'}}"
        >
          <i-cell title="开关">
            <i-switch
              i-class="{{openLoading ? 'open-loading' : ''}}"
              value="{{featureInfo[actionDeviceInfo.controlName] !== '0'}}"
              slot="footer"
              @change="changeFeatureInfo"
            ></i-switch>
          </i-cell>
          <i-cell title="挡位" wx:if="{{featureInfo[actionDeviceInfo.controlName] !== '0'}}">
            <i-input-number
              value="{{(featureInfo[actionDeviceInfo.controlName])}}"
              min="1" max="3"
              bindchange="changeFeatureInfo"
              slot="footer"
            />
          </i-cell>
        </i-cell-group>
        <!-- 空调 -->
        <i-cell-group
          wx:if="{{actionDeviceInfo.originControlName === 'tem'}}"
        >
          <i-cell title="开关">
            <i-switch
              i-class="{{openLoading ? 'open-loading' : ''}}"
              value="{{featureInfo[actionDeviceInfo.controlName] !== '0'}}"
              @change="changeFeatureInfo"
              slot="footer"
            ></i-switch>
          </i-cell>
          <i-cell title="温度" wx:if="{{featureInfo[actionDeviceInfo.controlName] !== '0'}}">
            <i-input-number
              value="{{featureInfo[actionDeviceInfo.controlName]}}"
              min="1" max="25"
              bindchange="changeFeatureInfo"
              slot="footer"
            />
          </i-cell>
        </i-cell-group>
      </view>
    </i-modal>
  </view>
  <i-message id="message"/>
</template>

<script>
import wepy from 'wepy';
import { connect } from 'wepy-redux';
import Base from '../../components/iview/base/index';
import featureSocket from '../../util/feature-socket';
import { updateFeatureInfo, updateRoomInfoList, updateDeviceInfoList } from '../../store/feature';
import api from '../../api';

@connect({
  userInfo: (state) => state.account.userInfo,
  featureInfo: (state) => state.feature.featureInfo,
  roomInfoList: (state) => state.feature.roomInfoList,
  deviceInfoList: (state) => state.feature.deviceInfoList
}, {
  updateFeatureInfo,
  updateRoomInfoList,
  updateDeviceInfoList
})
export default class Home extends wepy.page {
  config = {
    navigationBarTitleText: '我的设备'
  };

  data = {
    // 模态框显示/隐藏
    visible: false,
    // 当前滑块的位置
    current: 0,
    // swiper 高度
    swiperHeight: '100vh',
    // 加载房间与设备对应的数据
    loading: true,
    // 房间与设备对应的数据
    newRoomDeviceInfoList: [],
    // 当前操作的设备信息
    actionDeviceInfo: {},
    // 模态框正在打开状态, 取消 switch 动画
    openLoading: false,
    // 温度信息
    temHum1: {
      tem: null,
      hum: null
    }
  };

  methods = {
    // 前往签加设备页面
    addFeature: () => {
      if (this.userInfo.userInfo !== undefined) {
        wx.navigateTo({
          url: '/pages/device/add-device/index'
        });
      } else {
        // 未登录, 跳转登陆
        this.methods.toSignIn();
      }
    },
    // 刷新房间与设备对应的数据
    refreshNewRoomDeviceInfoList: () => {
      // 设置设备对应的房间名称, 以及控制前缀
      let newDeviceInfoList = this.deviceInfoList.map(deviceInfoItem => {
        deviceInfoItem.roomName = this.roomInfoList.find(roomInfoItem => roomInfoItem.id === deviceInfoItem.roomId).name;
        return deviceInfoItem;
      });
      // 将设备归类到对应的房间
      const newRoomDeviceInfoList = this.roomInfoList.map((roomInfoItem) => {
        roomInfoItem.deviceInfoList = newDeviceInfoList.filter(deviceInfoItem => deviceInfoItem.roomId === roomInfoItem.id);
        return roomInfoItem;
      });
      // 我的设备显示全部设备
      newRoomDeviceInfoList.unshift({
        name: '我的设备',
        deviceInfoList: newDeviceInfoList
      });

      // 更新数据
      setTimeout(() => {
        this.newRoomDeviceInfoList = newRoomDeviceInfoList;
        this.$apply();
      }, 100);
      if (newDeviceInfoList.length > 0) {
        this.swiperHeight = (Math.ceil(newDeviceInfoList.length / 2) * 115) + 'px';
      } else {
        this.swiperHeight = '115px';
      }
    },
    // 改变轮播图当前的索引
    changeCurrent: (index) => {
      this.current = index;
    },
    // 轮播图滚动触发
    chaneScroll: (e) => {
      this.current = e.detail.current;
    },
    // 操作设备容器
    toActionDevice: (deviceInfo) => {
      if (this.featureInfo[deviceInfo.controlName] !== undefined) {
        console.log(deviceInfo);
        this.actionDeviceInfo = deviceInfo;
        this.openLoading = true;
        this.$apply();
        this.methods.toggleModal(true);
        this.openLoading = false;
        this.$apply();
      } else {
        Base.$Message({
          content: '当前操作设备已离线!',
          type: 'warning'
        });
      }
    },
    // 显示设备操作容器
    toggleModal: (visible) => {
      this.visible = visible;
      this.$apply();
    },
    // 改变设备状态
    changeFeatureInfo: (e) => {
      switch (this.actionDeviceInfo.originControlName) {
        case 'LED':
        case 'door':
        case 'cur':
        case 'hood':
          featureSocket.sendWebSocketData(`${this.actionDeviceInfo.controlName}-${e.detail.value ? '1' : '0'}`);
          break;
        case 'fan':
          // 判断是开关还是挡位
          if (typeof e.detail.value === 'boolean') {
            featureSocket.sendWebSocketData(`${this.actionDeviceInfo.controlName}-${e.detail.value ? '1' : '0'}`);
          } else if (typeof e.detail.value === 'number') {
            featureSocket.sendWebSocketData(`${this.actionDeviceInfo.controlName}-${e.detail.value}`);
          }
          break;
        case 'tem':
          // 判断是开关还是挡位
          if (typeof e.detail.value === 'boolean') {
            featureSocket.sendWebSocketData(`${this.actionDeviceInfo.controlName}-${e.detail.value ? '15' : '0'}`);
          } else if (typeof e.detail.value === 'number') {
            featureSocket.sendWebSocketData(`${this.actionDeviceInfo.controlName}-${e.detail.value}`);
          }
          break;
        default:
          console.log('未知 originControlName');
      }
    },
    // 前往登陆页面
    toSignIn: () => {
      wx.navigateTo({
        url: '/pages/account/sign-in/index'
      });
    },
    // 更新房间, 设备列表数据
    updateRoomDeviceInfoList: async () => {
      this.loading = true;
      this.$apply();
      let result1 = api.room.selectRoomList({
        openid: this.userInfo.openid
      });
      let result2 = api.device.selectDeviceList({
        openid: this.userInfo.openid
      });
      result1 = await result1;
      result2 = await result2;
      // 更新房间数据
      this.methods.updateRoomInfoList(result1.data);
      // 更新设备数据
      this.methods.updateDeviceInfoList(result2.data);
      setTimeout(() => {
        this.loading = false;
        this.$apply();
      }, 100);
    }
  };

  watch = {
    userInfo: async () => {
      // 监听用户信息, 初始化房间与设备数据
      if (this.userInfo.openid && this.deviceInfoList.length === 0 && this.roomInfoList.length === 0) {
        this.methods.updateRoomDeviceInfoList();
      }
    },
    roomInfoList: () => {
      // 监听房间数据, 更新房间与设备对应的数据
      this.methods.refreshNewRoomDeviceInfoList();
    },
    deviceInfoList: () => {
      // 监听设备数据, 更新房间与设备对应的数据
      this.methods.refreshNewRoomDeviceInfoList();
    },
    featureInfo: (newValue) => {
      if (this.actionDeviceInfo.controlName) {
        // 如果当前操作的设备不存在, 隐藏模态框
        if (!newValue.hasOwnProperty(this.actionDeviceInfo.controlName)) {
          console.log(this.actionDeviceInfo);
          this.methods.toggleModal(false);
          Base.$Message({
            content: `当前操作的设备已离线`,
            type: 'warning',
            duration: 3
          });
        }
      }
      // 更新温度和湿度
      if (newValue.temHum1) {
        this.temHum1 = {
          tem: newValue.temHum1.split('-')[0],
          hum: newValue.temHum1.split('-')[1]
        };
      }
    }
  };

  onLoad() {
    // 只有当数据为空才初始化 webSocket
    if (JSON.stringify(this.featureInfo) === '{}') {
      // 初始化 webSocket 链接
      featureSocket.initWebSocketClient(() => {
        // 初始化 webSocket 事件
        featureSocket.initWebSocketEventHandler(this.methods.updateFeatureInfo);
        // 连接成功初始化数据
        featureSocket.sendWebSocketData('INIT');
      });
    }

    // 如果有用户信息说明已经初始化, 直接取消 loading
    if (this.userInfo.openid) {
      this.loading = false;
      this.$apply();
    }
    if (this.userInfo.openid && this.deviceInfoList.length === 0 && this.roomInfoList.length === 0) {
      this.methods.updateRoomDeviceInfoList();
    }

    // 初始化数据
    this.methods.refreshNewRoomDeviceInfoList();
  }
}
</script>

<style lang="less">
  .home-container {
    .home-info-container {
      padding-left: 20px;
      padding-right: 20px;
      background-color: #fff;
      box-shadow: 0 1px 10px rgba(0, 0, 0, .1);
      .top {
        height: 55px;
        display: flex;
        align-items: center;
        justify-content: space-between;
        .home-name {
          font-size: 19px;
          font-weight: bold;
          letter-spacing: 1px;
          color: #40a9ff;
        }
        // 添加设备按钮
        .to-add-deice {
          display: flex;
          align-items: center;
          justify-content: center;
          width: 33px;
          height: 33px;
          line-height: 33px;
          border-radius: 50%;
          font-size: 20px;
          font-weight: bold;
          background-color: #40a9ff;
          color: #fff;
        }
      }
      .bottom {
        .tem,
        .hum {
          display: flex;
          align-items: center;
          font-size: 13px;
          color: #40a9ff;
          opacity: .9;
          .number {
            font-size: 15px;
            margin-left: 5px;
            font-weight: bold;
          }
        }
        .tem {
          padding-bottom: 10px;
        }
      }
    }
    .room-device-container {
      .room-info-list-container {
        display: flex;
        margin-top: 10px;
        padding-left: 10px;
        padding-right: 10px;
        background-color: #fff;
        box-shadow: 0 0 10px rgba(0, 0, 0, .05);
        .scroll-view {
          white-space: nowrap;
          view {
            display: inline-block;
            padding: 10px;
            font-size: 13px;
            color: #888;
            &.active {
              color: #40a9ff;
            }
            &:last-child {
              margin-right: 0;
            }
          }
        }
      }
      .device-info-list {
        swiper {
          min-height: 100vh;
          margin-top: 10px;
          .device-info-list-container {
            display: flex;
            flex-wrap: wrap;
            .device-info-list-item {
              width: 50%;
              padding-left: 10px;
              padding-right: 10px;
              margin-bottom: 10px;
              box-sizing: border-box;
              &:nth-child(odd) {
                padding-right: 5px;
              }
              &:nth-child(even) {
                padding-left: 5px;
              }
              .device-info {
                height: 105px;
                background-color: #fff;
                border-radius: 11px;
                box-shadow: 0 0 10px rgba(0, 0, 0, .1);
                &.offline {
                  background-color: rgba(0, 0, 0, .1);
                }
                .name-room-name {
                  display: flex;
                  justify-content: space-between;
                  height: 50px;
                  box-sizing: border-box;
                  padding: 15px;
                  .name {
                    max-width: 65%;
                    overflow: hidden;
                    white-space: nowrap;
                    text-overflow: ellipsis;
                    font-size: 13px;
                  }
                  .room-name {
                    max-width: 35%;
                    padding: 2px 3px;
                    border-radius: 5px;
                    overflow: hidden;
                    white-space: nowrap;
                    text-overflow: ellipsis;
                    font-size: 11px;
                    text-align: center;
                    color: #888;
                    background-color: rgba(0, 0, 0, .05);
                  }
                }
                .image-action-list {
                  display: flex;
                  justify-content: space-between;
                  align-items: center;
                  height: 65px;
                  box-sizing: border-box;
                  padding: 5px 15px 15px;
                  .image {
                    image {
                      width: 35px;
                      height: 35px;
                    }
                  }
                  .action-power {
                    display: flex;
                    justify-content: center;
                    align-items: center;
                    width: 28px;
                    height: 28px;
                    border-radius: 50%;
                    background-color: #eee;
                    &.active {
                      background-color: rgba(67, 162, 255, 0.25);
                    }
                    &.offline {
                      background-color: transparent;
                      .offline {
                        overflow: hidden;
                        white-space: nowrap;
                        text-overflow: ellipsis;
                        font-size: 12px;
                        color: #888;
                      }
                    }
                    .online {
                      display: flex;
                      image {
                        width: 15px;
                        height: 15px;
                      }
                    }
                  }
                  .action-fan,
                  .action-tem {
                    display: flex;
                    justify-content: center;
                    align-items: center;
                    width: 28px;
                    height: 28px;
                    border-radius: 50%;
                    background-color: #eee;
                    &.active {
                      background-color: #fff;
                    }
                    &.offline {
                      background-color: transparent;
                      .offline {
                        overflow: hidden;
                        white-space: nowrap;
                        text-overflow: ellipsis;
                        font-size: 12px;
                        color: #888;
                      }
                    }
                    .online {
                      display: flex;
                      .fan-number,
                      .tem-number {
                        white-space: nowrap;
                        font-size: 15px;
                        letter-spacing: 1px;
                        color: #40a9ff;
                      }
                      image {
                        width: 15px;
                        height: 15px;
                      }
                    }
                  }
                }
              }
            }
          }
          .not-device-container {
            padding-left: 10px;
            padding-right: 10px;
            .not-device {
              display: flex;
              justify-content: center;
              align-items: center;
              height: 105px;
              border-radius: 10px;
              background-color: #fff;
              font-size: 14px;
              color: #999;
            }
          }
        }
      }
    }
    .to-sign-in-tooltip {
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      height: 105px;
      margin-top: 10px;
      margin-right: 10px;
      margin-left: 10px;
      border-radius: 10px;
      font-size: 13px;
      color: #999;
      background-color: #fff;
      .bold {
        margin-bottom: 5px;
        font-weight: bold;
        font-size: 14px;
        color: #333;
      }
    }
    .loading-container {
      position: absolute;
      top: 0;
      right: 0;
      left: 0;
      bottom: 0;
      background: #fff;
    }
  }

  .i-modal-device-control {
    & > view:first-child {
      width: 100%;
      & > view:first-child {
        & > view:first-child {
          max-height: 90%;
          margin-bottom: 0;
          padding-bottom: 10px;
          padding-left: 10px;
          padding-right: 10px;
          .device-name {
            font-size: 15px;
            color: #555;
            padding-bottom: 10px;
            border-bottom: 1px solid rgba(0, 0, 0, .2);
          }
          .device-action-form {
            text-align: left;
            .open-loading {
              transition: 0s;
              &:after {
                transition: 0s;
              }
            }
          }
        }
        & > view:nth-child(2) {
          padding-left: 10px;
          padding-right: 10px;
        }
      }
      & > view:nth-child(2) {
        padding-left: 10px;
        padding-right: 10px;
      }
    }
  }
</style>
