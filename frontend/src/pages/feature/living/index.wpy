<template>
  <i-cell-group>
    <i-cell title="灯光开关">
      <i-switch
        value="{{featureInfo.LED2}}"
        data-control-name="LED2"
        size="large"
        slot="footer"
        @change="onChangeSwitch"
      />
    </i-cell>
    <i-cell title="风扇挡位">
      <i-input-number
        value="{{featureInfo.fan1}}"
        data-control-name="fan1"
        min="0" max="3"
        bindchange="onInputNumberChange"
        slot="footer"/>
    </i-cell>
    <i-cell title="室内温度调控">
      <i-input-number
        value="{{featureInfo.tem1}}"
        data-control-name="tem1"
        min="15" max="30"
        bindchange="onInputNumberChange"
        slot="footer"/>
    </i-cell>
  </i-cell-group>
  <i-cell-group>
    <i-cell title="当前室内温度">
      <text slot="footer">{{featureInfo.temHum1Tem}}</text>
    </i-cell>
    <i-cell title="当前室内湿度">
      <text slot="footer">{{featureInfo.temHum1Hum}}</text>
    </i-cell>
  </i-cell-group>
  <!-- 提示框 -->
  <i-toast id="toast"/>
</template>

<script>
import wepy from 'wepy';
import { connect } from 'wepy-redux';
import featureSocketUtil from '../../../util/feature-socket';

@connect({
  featureInfo(state) {
    return state.feature.featureInfo;
  }
}, {})
export default class FeatureKitchen extends wepy.page {
  config = {
    navigationBarTitleText: '客厅'
  };

  methods = {
    onChangeSwitch: (e) => {
      const data = `${e.target.dataset.controlName}-${e.detail.value ? '1' : '0'}`;
      // 发送数据到服务端
      featureSocketUtil.sendWebSocketData(data);
    },
    onInputNumberChange: (e) => {
      const data = `${e.target.dataset.controlName}-${e.detail.value}`;
      // 发送数据到服务端
      featureSocketUtil.sendWebSocketData(data);
    }
  };
}
</script>

<style lang="less">
  .home-container {
    .feature-list-container {
      display: flex;
      flex-wrap: wrap;
      border-top: ~"1rpx" solid #e9eaec;
      border-left: ~"1rpx" solid #e9eaec;
      .feature-list-item {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        width: 33.33333333%;
        height: ~"300rpx";
        border-right: ~"1rpx" solid #e9eaec;
        border-bottom: ~"1rpx" solid #e9eaec;
        box-sizing: border-box;
        text {
          display: flex;
          width: auto;
        }
      }
    }
  }
</style>
