<template>
  <view class="sign-in-container">
    <i-input
      value="{{socketId}}"
      maxlength="-1"
      right
      mode="wrapped"
      title="家居id"
      @change="changePassword"
      placeholder="输入您的智能家居id"
    />
    <view class="sign-in-button-container">
      <i-button
        loading="{{signInLoading}}"
        type="primary"
        long="true"
        @click="signIn"
      >
        连接
      </i-button>
    </view>
  </view>
  <!-- 提示框 -->
  <i-toast id="toast"/>
</template>

<script>
import wepy from 'wepy';
import { connect } from 'wepy-redux';
import { updateFeatureInfo } from '../../../store/feature';
import featureSocketUtil from '../../../util/feature-socket';
import Base from '../../../components/iview/base/index';

@connect({
  featureInfo: function featureInfo(state) {
    return state.feature.featureInfo;
  }
}, {
  updateFeatureInfo
})
export default class AccountSignIn extends wepy.page {
  config = {
    navigationBarTitleText: '连接您的智能家居'
  };

  data = {
    socketId: 'p',
    signInLoading: false
  };

  methods = {
    changePassword: (e) => {
      this.socketId = e.detail.detail.value;
    },
    signIn: () => {
      if (this.signInLoading) return;
      this.signInLoading = true;
      this.$apply();
      setTimeout(() => {
        featureSocketUtil.sendWebSocketData(`hasSocket-${this.socketId}`);
      }, 1000);
    }
  };

  watch = {
    featureInfo(newValue, oldValue) {
      this.signInLoading = false;
      this.$apply();
      // 监听智能家居是否连接
      if (newValue.hasSocket && newValue.initHasSocketIdFlag === true) {
        this.methods.updateFeatureInfo({ initHasSocketIdFlag: false });
        if (newValue.hasSocket === 'yes') {
          Base.$Toast({
            content: '智能家居-连接成功',
            duration: 1,
            mask: false
          });
          // 发送 webSocket id 让服务器保存
          featureSocketUtil.sendWebSocketData(`id-${this.socketId}`);
          setTimeout(() => {
            // 初始化数据
            featureSocketUtil.sendWebSocketData(`INIT`);
            setTimeout(() => {
              wepy.switchTab({
                url: '/pages/home/index'
              });
            }, 500);
          }, 111);
        } else {
          Base.$Toast({
            content: '智能家居-连接失败',
            duration: 1,
            mask: false
          });
        }
      }
    }
  };

  onLoad() {
    // 初始化 webSocket 客户端
    featureSocketUtil.initWebSocketClient(this.methods.updateFeatureInfo);
  };
}
</script>

<style lang="less">
  .sign-in-container {
    .sign-in-button-container {
      padding: 10px 15px;
    }
  }
</style>
